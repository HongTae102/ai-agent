import OpenAI from "openai";

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY! });

export async function analyzeMatchupWithAI(myTeam: string[], enemyTeam: string[]) {
  const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏Ñ‡πâ‡∏ä Pok√©mon ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏•‡∏Å

**‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤:**
${myTeam.join(", ")}

**‡∏ó‡∏µ‡∏°‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ:**
${enemyTeam.join(", ")}

üéØ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏µ‡∏°:
1. ‡∏Ñ‡∏π‡πà‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î?
2. ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏î‡∏µ?
3. ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô Lead?
4. ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ?
5. ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏£‡∏∏‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ö?

üéì ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å Competitive Meta ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (Single Battle, VCG) ‡πÄ‡∏ä‡πà‡∏ô‡∏à‡∏≤‡∏Å Pikalytics, Smogon

‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:
{
  "lead": "‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô",
  "threats": ["..."],
  "safeOptions": ["..."],
  "strategy": "‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°"
}
‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å JSON
`;

  const res = await openai.chat.completions.create({
    model: "gpt-4o-mini",
    temperature: 0.5,
    messages: [{ role: "user", content: prompt }],
  });

  const text = res.choices[0].message.content || "";

  // ‡∏´‡∏≤‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á JSON ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á
  const jsonStart = text.indexOf("{");
  const jsonEnd = text.lastIndexOf("}");
  if (jsonStart === -1 || jsonEnd === -1) {
    throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö JSON ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå");
  }

  const jsonText = text.slice(jsonStart, jsonEnd + 1);

  try {
    return JSON.parse(jsonText);
  } catch (e) {
    console.error("‚ö†Ô∏è JSON parse error:", jsonText);
    throw e;
  }
}
