import OpenAI from "openai";
import { fetchPikalyticsTeammates } from "./pikalytics";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function analyzeTeamWithAI(
  main: string,
  counterTypes: string[]
): Promise<{ teammates: string[]; reasoning: string }> {
  const typeList = counterTypes.join(", ");
  
  const metaTeammates = await fetchPikalyticsTeammates(main);
  const teammateList = metaTeammates.join(", ");

  const prompt = `
  ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô Pok√©mon VGC 2025
  
  ‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠: ${main}
  ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏û‡πâ‡∏ó‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠: ${typeList}
  
  ‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö ${main} ‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Pikalytics ‡∏Ñ‡∏∑‡∏≠:
  ${teammateList}
  
  üõë ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:
  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏ó‡∏µ‡∏° 5 ‡∏ï‡∏±‡∏ß "‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô" ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å top 5
  ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏ô‡∏µ‡πâ ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
  
  üß† ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢:
  - ‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô VGC (‡∏ó‡∏µ‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏µ 6 ‡∏ï‡∏±‡∏ß ‡∏£‡∏ß‡∏° ${main})
  - ‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏¥‡∏î‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏Å type ‡∏ó‡∏µ‡πà‡πÅ‡∏û‡πâ
  - ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡πÄ‡∏ä‡πà‡∏ô: ‡∏ï‡∏±‡∏ß‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏´‡∏•‡∏±‡∏Å, ‡∏ï‡∏±‡∏ß‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï, ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ô‡∏≤‡∏°, ‡∏ï‡∏±‡∏ß‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô

  ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:
  1. ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡πÉ‡∏î
  2. ‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£
  3. ‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£
  4. ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
  5. ‡∏Ñ‡∏ß‡∏≤‡∏° synergy ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏°
  6. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏°‡∏≤‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏ö‡πâ‡∏≤‡∏á
  7. ‡πÅ‡∏û‡πâ‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡πÅ‡∏ö‡∏ö‡πÉ‡∏î
  8. ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  
  üéØ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
  {
    "teammates": ["‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô1", "‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô2", "..."],
    "reasoning": "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£"
  }
  `;
  

  const response = await openai.chat.completions.create({
    model: "gpt-4o-mini",
    messages: [{ role: "user", content: prompt }],
    temperature: 0.5,
  });

  const rawText = response.choices[0].message.content ?? "";
  const match = rawText.match(/\{[\s\S]*\}/);
  if (!match) throw new Error("AI ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");

  const parsed = JSON.parse(match[0]);
  return {
    teammates: parsed.teammates || [],
    reasoning: parsed.reasoning || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢",
  };
}