import OpenAI from "openai";
import { availableTools, tools } from "../tool";

/**
 * Represents a Pok√©mon agent that suggests competitive teams.
 */
export class PokemonAgent {
    private client: OpenAI;

    private messages = [
        {
            role: 'system',
            content: `
                ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡∏≤‡∏¢‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°

                üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:
                - ‡∏ä‡πà‡∏ß‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏ó‡∏µ‡∏°‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô (competitive team)
                - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡∏°‡∏≤ 1 ‡∏ï‡∏±‡∏ß ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏µ‡∏° ‡∏ó‡∏µ‡∏°‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 6 ‡∏ï‡∏±‡∏ß
                - ‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó (role), type synergy, ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ
                - ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ + ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• usage ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö Pikalytics

                üõ† ‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î:
                - ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô suggestTeamForPokemon(name) ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡∏°
                - ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡πÄ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡∏°
                - suggestTeamForPokemon(name) ‚Üí ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏µ‡∏°‡πÅ‡∏ö‡∏ö‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
                - getPikalyticsUsage(name) ‚Üí ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö

                üéØ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
                - ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ getPikalyticsUsage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏ö‡πà‡∏≠‡∏¢
                - ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡πâ‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á synergy ‡πÅ‡∏•‡∏∞ role balance
                - ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÇ‡∏Ñ‡πâ‡∏ä ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

                üó£ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:
                - ‡∏ï‡∏≠‡∏ö‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÇ‡∏Ñ‡πâ‡∏ä‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô (‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏±‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á)
                - ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡πÑ‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏™‡∏£‡∏¥‡∏° coverage, ‡∏£‡∏±‡∏ö‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏±‡∏Å
                - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á JSON ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
                - ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô Smogon ‡∏´‡∏£‡∏∑‡∏≠ Bulbapedia ‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏£‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡πâ‡∏ß‡∏¢

                üìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°:

                ‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö Garchomp:
                - üõ°Ô∏è Gholdengo - ‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏±‡∏ö Ice ‡∏Å‡∏±‡∏ö Fairy ‡∏ó‡∏µ‡πà Garchomp ‡πÅ‡∏û‡πâ + ‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏™‡∏£‡∏¥‡∏° Special-Attack ‡∏ó‡∏µ‡πà Gachomp ‡∏Ç‡∏≤‡∏î‡πÑ‡∏î‡πâ
                - üíñ Murkrow - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ set up Tailwind ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏° Speed ‡πÉ‡∏´‡πâ Garchomp
                - üåø Flutter Mane - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏ó‡∏≤‡∏á‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤ Gachomp
                - ‚ö° Rotom-Wash - ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°‡∏ô‡πâ‡∏≥-‡∏ö‡∏¥‡∏ô + Trick ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ + ‡∏ï‡πâ‡∏≤‡∏ô‡∏ô‡πâ‡∏≥
                - üî• Hydreigon - ‡πÄ‡∏™‡∏£‡∏¥‡∏° offensive core ‡∏ï‡∏µ‡∏û‡∏ß‡∏Å Psychic/Ghost + Levitate ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏ô‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ

                ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏• ‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏ö‡∏∏‡∏Å-‡∏£‡∏±‡∏ö-utility ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏∏‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!

                ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: https://www.smogon.com/dex/sv/pokemon/garchomp
            `
        }
    ];

    /**
     * Creates a new instance of the PokemonAgent.
     * @param client - An instance of the OpenAI client used for processing Pok√©mon-related queries.
     */
    constructor(client: OpenAI) {
        this.client = client;
    }

    /**
     * Processes a Pok√©mon-related question and provides a competitive team suggestion.
     * @param message - The Pok√©mon-related question or query from the user.
     * @returns A Promise that resolves to a string containing the response.
     */
    askQuestion = async (message: string): Promise<string> => {
        this.messages.push({ role: 'user', content: message });

        const MAX_ITERATIONS = 5;
        let iterations = 0;

        while (iterations < MAX_ITERATIONS) {
            console.log(`Iteration: ${iterations}`);

            const response = await this.client.chat.completions.create({
                model: 'gpt-4o-mini',
                messages: this.messages as any,
                temperature: 0.5,
                tools: tools as any,
            });

            const { finish_reason, message } = response.choices[0];

            if (finish_reason === 'stop') {
                this.messages.push(message as any);
                return message.content ?? "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö";
            }

            if (finish_reason === 'tool_calls') {
                const call = message.tool_calls![0];
                const func = availableTools[call.function.name];
                console.log(call.function.name);
                const args = JSON.parse(call.function.arguments);
                const result = await func(...Object.values(args));

                this.messages.push({
                    role: 'function',
                    name: call.function.name,
                    content: typeof result === "string" ? result : JSON.stringify(result),
                } as any);
            }

            iterations++;
        }

        return "‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö";
    };
}
